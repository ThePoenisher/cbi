#!/bin/bash

f="$(dirname "${BASH_SOURCE[0]}")/Wortliste"
echo $f

# converts a binary number to a list of words

# the list:
# http://www1.ids-mannheim.de/kl/projekte/methoden/derewo.html
if false; then
		e=`mktemp`
		curl -LO http://www.ids-mannheim.de/kl/derewo/derewo-v-ww-bll-320000g-2012-12-31-1.0.zip
		unzip derewo-v-ww-bll-320000g-2012-12-31-1.0.zip
    cat derewo-v-ww-bll-320000g-2012-12-31-1.0.txt | iconv -f latin1 -t utf8 | cut -f 1 -d\ |  sed -e 's/./\L\0/g' -e '/.*[-(),#].*/d' | sort -u > $e
		cat $e | perl -nle '$l=length($_);print $l<5||$l>9 ? "" : $_ ' | sed -e '/^$/d' > "$f"
    cat $e | perl -nle '$l=length($_);print $l!=10 ? "" : $_ ' | sed -e '/^$/d' | shuf -n $((65536 - $(cat "$f" | wc -l ))) >> "$f"
		shuf "$f" > $e
		mv $e "$f"
		exit
#		ALTERNATIVES:
		14bit: 5-7   ->  84bit: 6 w max 42 c
* 	16bit: 5-10  ->  80bit: 5 w max 50 c
		17bit: 5-12  ->  85bit: 5 w max 60 c
		18bit: 4-16 ->   90bit: 5 w max 80 c
		                 72bit: 4 w max 64 c
fi

if [ "debug" = "$1" ]; then
		debug=1
		shift
fi

echo "VERIFY THE INTEGRITY OF THIS FILE!!!!!!!" 1>&2

if ! echo 319b4c08b3ce29390699c96b31c48b863247da85d39a90d9e16b6d338b8289594e68cd20f39572ec8491faffc8c7dc8dc1b3ad8a239d0652670c61c3027acb7f "$f" | sha512sum -c --strict 1>&2; then
		echo checksum failed on "$f" 
		sha512sum "$f"
fi

if [ "$1" != "test" ]; then
		t=$(echo -e "\xff\xff\xff\xff\xff$(echo test123 | sha512sum | xxd -r -p)" | ./$0 test 2>/dev/null)
		if [ -n "$debug" ]; then echo -n "$t" 1>&2 ; fi 
		if [ "$t" != "slavistik slavistik menüplan filmebene einaktig nebelhorn münzen stehzeit radfahrer korselett weißklee überaus seeanker pepita verknoten ratwatte fanggrund datenbahn farblos schuhband singultus gringoland backware rittermahl zugaberuf obendrein ölschock jackett grasebene feiertag perlfluss brudermord einblick mausklick kultplatz " ]; then
		echo TEST FAILED 1>&2
		fi
fi


declare -a words
readarray -t words < "$f"

l=$(cat "$f" | wc -l )
hx="`head | xxd -p | tr '[:lower:]' '[:upper:]'`"
if [ -n "$debug" ]; then echo $hx; fi
# bits per word +2 = BC_LINE_LENGTH (including newline and backslash character!)
bi="$(echo "ibase=16;obase=2;$hx" | BC_LINE_LENGTH=18 bc | tr -d "\\" 2> /dev/null)"
if [ -n "$debug" ]; then echo $bi; fi
for b in $bi; do
		d=$(echo "obase=10;ibase=2;$b" | bc)
		if [ $l -le $d ]; then
				echo DECODING ERROR: $b = $d >= $l 1>&2
		fi
		if [ -n "$debug" ]; then echo $b $d; fi
		echo -n "${words[$d]} "
done







