#!/bin/bash
# bash cannot store null values in variables

# 10MB steps converted to 512 block counts
factor=20480
ic=250000
dklen=64
hashhexlen=128
salt="saltyKCfnOWWlJ1Jf1qwbs7qDUTJ5rB7GbxwzSJlP7sUSC2hM7Lh9nY7z4ZzjSUlC9W6QEszB6Hyz7JFORCxF8cisUPLrMv5s5bXFR6Io2bam6GoRAQqObC0R2h7Kn6";
cc="sudo cryptsetup plainOpen -h plain -c aes-xts-plain64 -q --key-size $(( dklen * 8 )) --key-file - -o"

if [ "$1" = "fd3" ]; then fd3=1; shift; fi
if [ $# -ne 2 ]; then
		cat <<EOF
 usage: ${0##*/} [fd3]    name            path
 usage: ${0##*/} [fd3]    name|-all       -resume|-suspend|-close
 usage: ${0##*/} [fd3]    path            -create  (reads pass from fd3)
EOF
		exit 1
fi


name="$1"
hexname="`xxd -p <<<$name | tr -d '\n'`"
tmpname=cryptsetupcreate$hexname
dev="$2"

if [ "$name"  = "-all" ]; then
		sudo dmsetup table | sed -r 's/^([^:]+): .*/\1/' | xargs -d '\n' -I{} "${BASH_SOURCE[0]}"  "{}" "$dev"
		exit
fi


if [ "$dev" = "-close" ]; then
		sudo cryptsetup close "$name"
		exit 1;
fi
		
if [ "$dev" = "-suspend" ]; then
		(sudo dmsetup suspend "$name" &&
				sudo dmsetup message "$name" 0 key wipe &&
				sudo dmsetup info "$name" &&
				sudo dmsetup table --target crypt --showkeys "$name")
		exit $?
fi

#test
if [ "`pbkdf2 Ã¤ a 100 64`" != "f3b2744dcf9e925487d7488545b47cd260b0a075cbfabf6ed2b01091d3599df797250976d7bf0021dd9876e623d565f1f33d5fdac55cabeffb09df499dac8b7f" ]; then
	echo "ERROR: PBKDF2 Test failed!";
	exit 1;
fi

if [ "$dev" = "-create" ]; then
		if sudo [ ! -w "$name" ] ; then
				echo "$name not writable"
				exit 1
		fi
fi
if [ "$fd3" ]; then
		read p < /dev/fd/3
else
		p=`my_pinentry "${0##*/}  $name $dev"`
fi

key=`pbkdf2 "$p" "$salt" "$ic" "$dklen"`
fp=`echo -n suspended"$key" | sha512sum | cut -f1 -d' '`
fp2=`echo -n created"$key" | sha512sum | cut -f1 -d' '`
fpf="/tmp/cryptsetup_key_$name"

p2=`echo "$p" | sed -nr 's/^([0-9]+) .+/\1/p'`
if [ -z "$p2" ]; then
		echo "ERROR: bad passphrase format"
		exit 1
fi
o=$(( factor * p2 ))

if [ "$dev" = "-resume" ]; then
		if [ "$fp" != "`cat "$fpf"`" -a \( ${#fp} -eq "$hashhexlen" \) ]; then
				echo "ERROR: $fpf does not match given passphrase"
				exit 1;
		fi
		(sudo dmsetup message "$name" 0 key set  "$key" &&
				sudo dmsetup resume "$name")
		exit $?
fi

if [ "$dev" = "-create" ]; then
		cat <<EOF
WARNING!
========
This will overwrite data on drive irrevocably.
`ls -lah $name`
Are you sure? (Type uppercase yes):
EOF
		read str
		if [ "$str" = "YES" ]; then
				(echo -n "$key" | xxd -r -p | sh -c "$cc $o \"$name\" \"$tmpname\"" &&	
						sudo sh -c "echo -n \"$fp2\" > \"/dev/mapper/$tmpname\"" &&
						while ! sudo cryptsetup close "$tmpname"; do
								echo Retry in 1 sec...
								sleep 1;
						done)
				exit $?
		else
				exit 1
		fi

else #open the device
		function fp3 {
				sudo dd if=/dev/mapper/"$2" bs=512 skip=$1 count=1 2>/dev/null | sha512sum | cut -f1 -d' '
		}			
		echo -n "$key" | xxd -r -p | sh -c "$cc $o --readonly \"$dev\" \"$tmpname\""
		test1="`sudo head /dev/mapper/"$tmpname" -c "$hashhexlen"`" 
		test2="`fp3 1 "$tmpname"`"
		sudo cryptsetup close "$tmpname"
		if [ \( "$fp2" = "$test1" \) -a \( ${#test1} -eq "$hashhexlen" \) ]; then
				o1=$((1+o))
   			if echo -n "$key" | xxd -r -p | sh -c "$cc $o1 -p1 \"$dev\" \"$name\""; then
						if [ "$test2" = "`fp3 0 "$name"`" -a \( ${#test2} -eq "$hashhexlen" \) ]; then
								sudo sh -c "echo -n \"$fp\" > \"$fpf\""
								sudo cryptsetup status "$name"
						else
								echo PLAINTEXT CHECK failed. possible encryption key mismatch
								sudo cryptsetup close "$name"
								exit 1
						fi
				else
						exit 1		
				fi
		else
				echo "Key has mismatch"
				exit 1
		fi
fi
