#!/bin/bash
# bash cannot store null values in variables

# 10MB steps converted to 512 block counts
factor=20480
ic=250000
ic2=25000
dklen=64
hashhexlen=128
salt="saltyKCfnOWWlJ1Jf1qwbs7qDUTJ5rB7GbxwzSJlP7sUSC2hM7Lh9nY7z4ZzjSUlC9W6QEszB6Hyz7JFORCxF8cisUPLrMv5s5bXFR6Io2bam6GoRAQqObC0R2h7Kn6";
salt2="saltc95ac9c82f8c7d3c9705ba502da772dc3099818facc2e913fa338b8dc7ba22edf56e91e8c0ccafd6def36adecdafd2447e450bc5600b6bbd586e5524as";
cc="cryptsetup plainOpen -h plain -c aes-xts-plain64 -q --key-size $(( dklen * 8 )) --key-file - -o"

function do_cc {
	echo "echo -n \"$1\" | xxd -r -p | $cc $2	" | sudo sh
}

if [ "$1" = "fd3" ]; then fd3=1; shift; fi
if [ $# -ne 2 ]; then
		cat <<EOF
 usage: ${0##*/} [fd3]    name            path
 usage: ${0##*/} [fd3]    name|-all       -resume|-suspend|-close
 usage: ${0##*/} [fd3]    path            -create  (reads pass from fd3)

 fd3: 3<<(command)
EOF
		exit 1
fi


name="$1"
tmpname=temp`echo -n $name | sha512sum | head -c 30`
fpf="/tmp/cryptsetup_$name"
dev="$2"

if [ "$name"  = "-all" ]; then
		if mapfile -t array < <(ls /tmp/cryptsetup_* | sed -nre's|/tmp/cryptsetup_(.*)|\1|p'); then
				echo "${array[@]}"
				for d in "${array[@]}"; do
						if [ "$dev" != "-resume" ] || (sudo dmsetup info "$d" | grep -iq "state: *SUSPENDED"); then
								"${BASH_SOURCE[0]}"  "$d" "$dev"
						fi
				done 
		fi
		exit
fi


if [ "$dev" = "-close" ]; then
		sudo cryptsetup close "$name" && sudo rm "$fpf"
		exit $?
fi
		
if [ "$dev" = "-suspend" ]; then
		(sudo dmsetup suspend "$name" &&
				sudo dmsetup message "$name" 0 key wipe &&
				sudo dmsetup info "$name" &&
				sudo dmsetup table --target crypt --showkeys "$name")
		exit $?
fi

#test
if [ "`pbkdf2 ä a 100 64`" != "f3b2744dcf9e925487d7488545b47cd260b0a075cbfabf6ed2b01091d3599df797250976d7bf0021dd9876e623d565f1f33d5fdac55cabeffb09df499dac8b7f" ]; then
	echo "ERROR: PBKDF2 Test failed!";
	exit 1;
fi

if [ "$dev" = "-create" ]; then
		if sudo [ ! -w "$name" ] ; then
				echo "$name not writable"
				exit 1
		fi
fi
if [ "$fd3" ]; then
		read p < /dev/fd/3
else
		p=`my_pinentry "${0##*/}  $name $dev"`
fi

key=`pbkdf2 "$p" "$salt" "$ic" "$dklen"`
p2=`echo "$p" | sed -nr 's/^([0-9]+) .+/\1/p'`
unset p

if [ -z "$p2" ]; then
		echo "ERROR: bad passphrase format"
		exit 1
fi
o=$(( factor * p2 ))


if [ "$dev" = "-resume" ]; then
		resume="yes"
		declare -a tab=(`sudo dmsetup table "$name"`)
		if [ $(( o+1 )) -ne ${tab[7]} ]; then 
				echo "ERROR: key mismatch (2)"
				exit 1
		fi
		dev=/dev/block/${tab[6]}
		if [ ! -b "$dev" ]; then
				echo "ERROR parsing device for $name: $dev"
				sudo dmsetup table "$name"
				exit 1
		fi
fi

fp2old=`echo -n created"$key" | sha512sum | cut -f1 -d' '`
fp2=`pbkdf2 "$p" "$salt2" "$ic2" "$dklen"`
# hexzahlen sind immer leicht zu finden. besser: binary noch besser:
# teil des passphrases abzweigen und als geheimen entschlüsselungstest
# nutzen.

if [ "$dev" = "-create" ]; then
		cat <<EOF
WARNING (generated from mycryptsetup)!
========
This will overwrite data on drive irrevocably.
`ls -lah $name`
`sudo blkid $name`
`sudo lsblk $name`
Are you sure? (Type uppercase yes):
EOF
		read str
		if [ "$str" = "YES" ]; then
				(do_cc "$key" "$o \"$name\" \"$tmpname\"" &&	
						(if true && [ ! "`sudo head /dev/mapper/"$tmpname" -c "$hashhexlen"`" = "$fp2old" ]; then 
								echo "ERROR: old key mismatch"
						else
						    echo "echo -n \"$fp2\" > \"/dev/mapper/$tmpname\"" | sudo sh
						fi)
						echo "closing..." && sync && sleep 1 &&
						(while ! sudo cryptsetup close "$tmpname"; do
								echo "Retry in 1 sec..."
								sleep 1;
						done))
				exit $?
		else
				exit 1
		fi

else #open/resume the device
		function fp3 {
				sudo dd if=/dev/mapper/"$2" bs=512 skip=$1 count=1 2>/dev/null | sha512sum | cut -f1 -d' '
		}			
		do_cc "$key" "$o --readonly --shared \"$dev\" \"$tmpname\""
		test1="`sudo head /dev/mapper/"$tmpname" -c "$hashhexlen"`" 
		test2="`fp3 1 "$tmpname"`"
		sudo cryptsetup close "$tmpname"
		if [ \( "$fp2old" = "$test1" -o "$fp2" = "$test1" \) -a \( ${#test1} -eq "$hashhexlen" \) ]; then
				o1=$((1+o))
				if [ "$resume" ]; then
						echo "dmsetup message \"$name\" 0 key set  \"$key\" &&
	          			dmsetup resume \"$name\"" | sudo sh
				else
						do_cc "$key" "$o1 -p1 \"$dev\" \"$name\""
				fi
   			if [ $? -eq 0 ]; then
						if [ "$test2" = "`fp3 0 "$name"`" -a \( ${#test2} -eq "$hashhexlen" \) ]; then
								touch "$fpf"
								sudo cryptsetup status "$name"
						else
								echo PLAINTEXT CHECK failed. possible encryption key mismatch
								sudo cryptsetup status "$name"
								sudo cryptsetup close "$name"
								exit 1
						fi
				else
						exit 1		
				fi
		else
				echo "ERROR: Key mismatch"
				exit 1
		fi
fi
