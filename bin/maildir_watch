#!/usr/bin/env bash
# Watch Maildir inboxes for new mails and send a summary notification with notify-send. Tested and "works perfectly" with dunst.
# Dependencies: inotifywait from inotify-tools package.

maildir_path="/home/johannes/Mail/j@g"		# Path to Maildir root.
watchdirs="" # manuall additional folder to watch
watchdirs="${watchdirs} $(for box in ${maildir_path}/*; do if ! grep -q ".*Trash" <<<"$box"; then mkdir -p "$box/new"; echo "$box/new"; fi; done)"
timeout=5000

echo $watchdirs

parse_send() {
	local inbox="$1"
	local mailfile="$2"

	local body=$(cat "$mailfile" | mimedump |  sed '/^\s*$/d' | sed '6,$d' )

	# Send the message with the name this scrip was invoked with.
	notify-send -t $timeout -i '/usr/share/icons/oxygen/32x32/status/mail-unread-new.png' "[$inbox]" "$body"
}

# Debug with static file.
if [ -n "$1" ]; then
	parse_send "debugmail"  "$1"
	exit 0
fi

echo "starting to start inotifywait in blocking manner."

# Let inotifywait monitor changes and output each event on it's own line.
inotifywait --monitor --event create --event moved_to ${watchdirs} 2>/dev/null | while read mail
do
	# Split inotify output to get path and the file that was added.
	parts=($(echo "$mail" | sed -e 's/ \(CREATE\|MOVED_TO\) / /'))
	inbox_path="${parts[0]}"
	inbox=$(echo "$inbox_path" | grep -Po "(?<=/)\w+(?=/new)")
	mailfile="${parts[1]}"
	parse_send "$inbox"  "${inbox_path}/${mailfile}"
done
